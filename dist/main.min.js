var App = function() {
    var a, b = {
        lines: [ {
            key: 0,
            name: "1",
            stations: [ {
                key: "0",
                name: "Les Jardins de l’Hôpital",
                directions: [ [ "7:44", "9:07", "9:52", "11:02", "12:25", "13:17", "14:45", "16:25", "17:15", "18:05" ], [ "7:27", "8:09", "9:32", "10:17", "11:27", "12:50", "13:42", "15:14", "16:50", "17:40", "18:30" ] ]
            }, {
                key: "1",
                name: "Parrine Basse",
                directions: [ [ "7:45", "7:45", "9:08", "9:53", "11:03", "12:26", "13:18", "14:46", "16:26", "17:16", "18:06" ], [ "7:26", "8:08", "9:31", "10:16", "11:26", "12:49", "13:41", "15:13", "16:49", "17:39", "18:29" ] ]
            }, {
                key: "2",
                name: "Pons",
                directions: [ [ "7:46", "9:09", "9:54", "11:04", "12:27", "13:19", "14:47", "16:27", "17:17", "18:07" ], [ "7:25", "8:07", "9:30", "10:15", "11:25", "12:48", "13:40", "15:12", "16:48", "17:38", "18:28" ] ]
            }, {
                key: "3",
                name: "Tillet",
                directions: [ [ "7:46", "9:09", "9:54", "11:04", "12:27", "13:19", "14:47", "16:27", "17:17", "18:07" ], [ "7:25", "8:07", "9:30", "10:15", "11:25", "12:48", "13:40", "15:12", "16:48", "17:38", "18:28" ] ]
            }, {
                key: "4",
                name: "Pinquié",
                directions: [ [ "7:47", "9:10", "9:55", "11:05", "12:28", "13:20", "14:48", "16:28", "17:18", "18:08" ], [ "7:24", "8:06", "9:29", "10:14", "11:24", "12:47", "13:39", "15:11", "16:47", "17:37", "18:27" ] ]
            }, {
                key: "5",
                name: "Centre des Impôts",
                directions: [ [ "7:47", "9:10", "9:55", "11:05", "12:28", "13:20", "14:48", "16:28", "17:18", "18:08" ], [ "7:24", "8:06", "9:29", "10:14", "11:24", "12:47", "13:39", "15:11", "16:47", "17:37", "18:27" ] ]
            }, {
                key: "6",
                name: "Les Miattes",
                directions: [ [ "7:48", "9:11", "9:56", "11:06", "12:29", "13:21", "14:49", "16:29", "17:19", "18:09" ], [ "7:23", "8:05", "9:28", "10:13", "11:23", "12:46", "13:38", "15:10", "16:46", "17:36", "18:26" ] ]
            }, {
                key: "7",
                name: "La Pintre",
                directions: [ [ "7:50", "9:13", "9:58", "11:08", "12:31", "13:23", "14:51", "16:31", "17:21", "18:11" ], [ "7:21", "8:03", "9:26", "10:11", "11:21", "12:44", "13:36", "15:08", "16:44", "17:34", "18:24" ] ]
            }, {
                key: "8",
                name: "Gendarmerie",
                directions: [ [ "7:50", "9:13", "9:58", "11:08", "12:31", "13:23", "14:51", "16:31", "17:21", "18:11" ], [ "7:21", "8:03", "9:26", "10:11", "11:21", "12:44", "13:36", "15:08", "16:44", "17:34", "18:24" ] ]
            }, {
                key: "9",
                name: "I.U.T.",
                directions: [ [ "7:53", "9:16", "10:01", "11:11", "12:34", "13:26", "14:54", "16:34", "17:24", "18:14" ], [ "7:18", "8:00", "9:23", "10:08", "11:18", "12:41", "13:33", "15:05", "16:41", "17:31", "18:21" ] ]
            }, {
                key: "10",
                name: "Ecureuils",
                directions: [ [ "7:55", "9:18", "10:03", "11:13", "12:36", "13:28", "14:56", "16:36", "17:26", "18:16" ], [ "7:16", "7:58", "9:21", "10:06", "11:16", "12:39", "13:31", "15:03", "16:39", "17:29", "18:19" ] ]
            }, {
                key: "11",
                name: "Genevriers",
                directions: [ [ "7:56", "9:19", "10:04", "11:14", "12:37", "13:29", "14:57", "16:37", "17:27", "18:17" ], [] ]
            }, {
                key: "12",
                name: "Nayrac",
                directions: [ [ "7:57", "9:20", "10:05", "11:15", "12:38", "13:30", "14:58", "16:38", "17:28", "18:18" ], [ "7:15", "7:57", "9:20", "10:05", "11:15", "12:38", "13:30", "15:02", "16:38", "17:28", "18:18" ] ]
            } ]
        }, {
            name: "2 (future)",
            stations: []
        }, {
            name: "3 (future)",
            stations: []
        }, {
            name: "4 (future)",
            stations: []
        }, {
            name: "5 (future)",
            stations: []
        }, {
            name: "6 (future)",
            stations: []
        }, {
            name: "7 (future)",
            stations: []
        }, {
            name: "8 (future)",
            stations: []
        }, {
            name: "9 (future)",
            stations: []
        }, {
            name: "10 (future)",
            stations: []
        }, {
            name: "11 (future)",
            stations: []
        } ]
    }, c = {
        lines: null,
        stations: null
    }, d = {
        line: null,
        direction: null,
        station: null
    }, e = 21e3, f = function() {
        moment.tz.setDefault("Europe/Paris"), h(), c.lines = $("#form-select-lines"), c.bookmarks = $("#form-bookmarks"), 
        c.bookmarksName = $("#modal-bookmark-name"), c.bookmarksIcon = $("#modal-bookmark-icon"), 
        c.bookmarksConfirm = $("#modal-bookmark-confirm"), c.directionsToggle = $("#form-direction-toggle"), 
        c.direction1 = $("#form-direction-1"), c.direction2 = $("#form-direction-2"), c.stations = $("#form-select-stations"), 
        c.timetable = $("#form-table-timetable"), c.addStar = $("#form-star-add"), c.removeStar = $("#form-star-remove"), 
        c.refresh = $("#form-refresh"), Bookmarks.init(), g(), j(), k(), a = setTimeout(function() {
            p();
        }, e);
    }, g = function() {
        for (var a = 0; a < b.lines.length; a++) {
            var e = b.lines[a];
            c.lines.append(HtmlGenerator.createLineOptionElement(e, a));
        }
        d.line = b.lines[0], l(d.line);
    }, h = function() {
        $('[data-toggle="tooltip"]').tooltip(), Cookies.get("tooltip-form-star-add") && $("#form-star-add").tooltip("destroy"), 
        Cookies.get("tooltip-form-star-remove") && $("#form-star-remove").tooltip("destroy"), 
        Cookies.get("tooltip-form-direction-toggle") && $("#form-direction-toggle").tooltip("destroy"), 
        Cookies.get("tooltip-form-refresh") && $("#form-refresh").tooltip("destroy");
    }, i = function() {
        c.stations.html("");
        var a, b;
        if (0 === d.direction) for (b = 0; b < d.line.stations.length; b++) a = d.line.stations[b], 
        c.stations.append(HtmlGenerator.createStationOptionElement(a, b)); else if (1 === d.direction) for (b = d.line.stations.length - 1; b >= 0; b--) a = d.line.stations[b], 
        c.stations.append(HtmlGenerator.createStationOptionElement(a, b));
    }, j = function() {
        var a = Bookmarks.getAll();
        a.forEach(function(a) {
            null !== a && c.bookmarks.append(HtmlGenerator.createBookmarkElement(a));
        });
    }, k = function() {
        c.lines.on("change", function(a) {
            var c = $(this).val();
            d.line = b.lines[c], l(d.line);
        }), c.stations.on("change", function(a) {
            var b = $(this).val();
            d.station = d.line.stations[b], m(d.station), r(c.directionsToggle.parent().prev());
        }), c.directionsToggle.on("click", function(a) {
            n();
        }), c.addStar.on("click", function() {
            c.bookmarksName.val(""), c.bookmarksIcon.attr("data-icon", "home"), c.bookmarksIcon.attr("class", "fa fa-lg fa-home"), 
            $(".modal-add-bookmark").modal();
        }), c.bookmarksConfirm.on("click", function() {
            var a = c.bookmarksName.val(), b = c.bookmarksIcon.attr("data-icon");
            Bookmarks.set(d.line.key, d.station.key, a, b), c.removeStar.removeClass("hidden"), 
            c.addStar.addClass("hidden");
            var e = HtmlGenerator.createBookmarkElement({
                line: parseInt(d.line.key),
                station: parseInt(d.station.key),
                name: a,
                type: b
            });
            c.bookmarks.append(e), $(".modal-add-bookmark").modal("hide"), e.click(function() {
                var a = $(this);
                o(a);
            });
        }), c.removeStar.on("click", function() {
            Bookmarks.remove(d.line.key, d.station.key), c.addStar.removeClass("hidden"), c.removeStar.addClass("hidden"), 
            c.bookmarks.find('li[data-line="' + d.line.key + '"][data-station="' + d.station.key + '"]').remove();
        }), c.bookmarks.find("li").on("click", function() {
            var a = $(this);
            o(a);
        }), $(".modal-option-icon").on("click", function() {
            var a = $(this).attr("data-icon");
            c.bookmarksIcon.attr("data-icon", a), c.bookmarksIcon.attr("class", "fa fa-lg fa-" + a);
        }), $('[data-toggle="tooltip"]').on("hidden.bs.tooltip", function() {
            $(this).tooltip("destroy");
            var a = "tooltip-" + $(this).attr("id");
            Cookies.set(a, !0, {
                expires: 30
            });
        }), c.refresh.on("click", function() {
            p();
        });
    }, l = function(a) {
        q();
        var b = d.line.stations[0], e = d.line.stations[d.line.stations.length - 1];
        c.direction1.html(b.name), c.direction1.attr("data-direction", 0), c.direction2.html(e.name), 
        c.direction2.attr("data-direction", 1), d.direction = 0, i(), d.station = d.line.stations[0], 
        m(d.station);
    }, m = function(a) {
        c.timetable.html("");
        for (var b = a.directions[d.direction], e = 0; e < b.length; e++) {
            var f = b[e];
            c.timetable.append(HtmlGenerator.createTableRowTimeElement(f, e));
        }
        c.timetable.find("tr.hidden").size() === b.length && (c.timetable.append('<tr class="warning"><td colspan="2"><h5 class="text-center">No more busses today!</h5></td></tr>'), 
        c.timetable.append('<tr><td colspan="2"><p class="text-center">Load the <a class="form-load-full-timetable">full timetable</a>.</p></td></tr>'), 
        $(".form-load-full-timetable").on("click tab", function() {
            c.timetable.find("tr").removeClass("hidden"), $(this).parent().parent().remove(), 
            r(c.timetable.prev());
        }));
        var g = Bookmarks.get(d.line.key, d.station.key);
        g ? (c.addStar.addClass("hidden"), c.removeStar.removeClass("hidden")) : (c.addStar.removeClass("hidden"), 
        c.removeStar.addClass("hidden"));
    }, n = function() {
        var a = c.direction1.html(), b = c.direction1.attr("data-direction"), e = c.direction2.html(), f = c.direction2.attr("data-direction");
        d.direction = parseInt(f), c.direction1.html(e), c.direction1.attr("data-direction", f), 
        c.direction2.html(a), c.direction2.attr("data-direction", b), i();
        var g = c.stations.find('option:contains("' + d.station.name + '")').val();
        c.stations.val(g), m(d.station);
    }, o = function(a) {
        var e = a.attr("data-line"), f = a.attr("data-station");
        c.lines.val(e), d.line = b.lines[e], l(d.line), d.station = d.line.stations[f], 
        c.stations.val(f), m(d.station);
    }, p = function() {
        clearTimeout(a), m(d.station), c.refresh.attr("disabled", "disabled"), c.refresh.find("span").addClass("fa-spin"), 
        setTimeout(function() {
            c.refresh.removeAttr("disabled"), c.refresh.find("span").removeClass("fa-spin");
        }, 3e3), a = setTimeout(function() {
            p();
        }, e);
    }, q = function() {
        c.stations.html(""), c.timetable.html("");
    }, r = function(a) {
        $("html, body").animate({
            scrollTop: a.offset().top
        }, 500);
    };
    return {
        init: f,
        data: b
    };
}();

$(document).ready(function() {
    App.init();
});

var HtmlGenerator = function() {
    var a = function(a, b) {
        var c = $("<option></option>");
        return c.val(b), c.html("Line: " + a.name), 0 === a.stations.length && c.attr("disabled", "disabled"), 
        c;
    }, b = function(a, b) {
        var c = $("<option></option>");
        return c.val(b), c.html(a.name), c;
    }, c = function(a, b) {
        var c = $("<tr></tr>"), d = $("<td></td>");
        d.html('<span class="glyphicon glyphicon-time"></span> ' + a);
        var e = $("<td></td>"), f = moment(), g = moment(), h = a.split(":");
        if (g.set("hours", h[0]), g.set("minutes", h[1]), f.isAfter(g)) e.html("arrived " + g.fromNow()), 
        c.addClass("hidden"); else {
            var i = g.diff(f);
            3 >= i / 6e4 ? c.addClass("danger") : 10 >= i / 6e4 ? c.addClass("warning") : 30 >= i / 6e4 && c.addClass("success"), 
            e.html('<span class="fa fa-bus"></span> &nbsp;' + g.fromNow());
        }
        return c.append(d), c.append(e), c;
    }, d = function(a) {
        var b = $("<li></li>");
        return b.append('<span class="fa fa-2x fa-' + a.type + '"></span>'), b.attr("data-line", a.line), 
        b.attr("data-station", a.station), b.attr("data-toggle", "tooltip"), b.attr("data-placement", "bottom"), 
        b.attr("title", a.name), b.tooltip(), b;
    };
    return {
        createLineOptionElement: a,
        createStationOptionElement: b,
        createTableRowTimeElement: c,
        createBookmarkElement: d
    };
}(), Bookmarks = function() {
    var a = null, b = function() {
        a = void 0 === Cookies.get("bookmarks") ? [] : JSON.parse(Cookies.get("bookmarks"));
    }, c = function(b, c) {
        var d = g(b, c);
        return a[d] ? !0 : !1;
    }, d = function() {
        return a;
    }, e = function(b, c, d, e) {
        var f = {
            key: g(b, c),
            line: b,
            station: c,
            type: e,
            name: d
        };
        a[f.key] = f, h();
    }, f = function(b, c) {
        var d = g(b, c);
        delete a[d], h();
    }, g = function(a, b) {
        return "1" + a + b;
    }, h = function() {
        Cookies.set("bookmarks", a, {
            expires: 365
        });
    };
    return {
        init: b,
        get: c,
        getAll: d,
        set: e,
        remove: f
    };
}();